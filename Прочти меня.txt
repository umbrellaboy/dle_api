create or replace procedure addFieldIfNotExists(IN table_name_IN varchar(100), IN field_name_IN varchar(100),
                                                IN field_definition_IN varchar(100))
BEGIN

    SET @isFieldThere = isFieldExisting(table_name_IN, field_name_IN);
    IF (@isFieldThere = 0) THEN

        SET @ddl = CONCAT('ALTER TABLE ', table_name_IN);
        SET @ddl = CONCAT(@ddl, ' ', 'ADD COLUMN');
        SET @ddl = CONCAT(@ddl, ' ', field_name_IN);
        SET @ddl = CONCAT(@ddl, ' ', field_definition_IN);

        PREPARE stmt FROM @ddl;
        EXECUTE stmt;
        DEALLOCATE PREPARE stmt;

    END IF;

END;

create or replace function isFieldExisting(table_name_IN varchar(100), field_name_IN varchar(100)) returns int
    RETURN (
        SELECT COUNT(COLUMN_NAME)
        FROM INFORMATION_SCHEMA.columns
        WHERE TABLE_SCHEMA = DATABASE()
          AND TABLE_NAME = table_name_IN
          AND COLUMN_NAME = field_name_IN
    );

CREATE TABLE {prefix}_api_keys (
	id int auto_increment
		primary key,
	api varchar(255) not null,
	is_admin tinyint(1) default 0 not null,
	creator int default 0 null,
	created datetime default CURRENT_TIMESTAMP not null,
	active tinyint(1) default 0 not null,
	user_id int default 0 not null,
  	own_only tinyint(1) default 1 not null,
	constraint {prefix}_api_keys_key_uindex
		unique (api)
);

create table {prefix}_api_scope (
	scope_id int auto_increment
		primary key,
	`table` varchar(255) null,
	`read` tinyint(1) default 0 not null,
	`write` tinyint(1) default 0 not null,
	`delete` tinyint(1) default 0 not null,
	key_id int default 0 not null,
	constraint {prefix}_api_scope_{prefix}_api_keys_id_fk
		foreign key (key_id) references {prefix}_api_keys (id)
			on update cascade on delete cascade
);

INSERT INTO {prefix}_admin_sections (name, title, descr, icon, allow_groups) VALUES ('dleapi', 'DLE-API', 'Неофициальное API для DLE. Раздел по созданию и управлению над ключами доступа к API.', '/engine/skins/images/icons/dleapi.png', 1);

Обновление
Заменить все файлы из папки upload, кроме install.xml.

Выполнить SQL запрос
create or replace procedure addFieldIfNotExists(IN table_name_IN varchar(100), IN field_name_IN varchar(100),
                                                IN field_definition_IN varchar(100))
BEGIN

    SET @isFieldThere = isFieldExisting(table_name_IN, field_name_IN);
    IF (@isFieldThere = 0) THEN

        SET @ddl = CONCAT('ALTER TABLE ', table_name_IN);
        SET @ddl = CONCAT(@ddl, ' ', 'ADD COLUMN');
        SET @ddl = CONCAT(@ddl, ' ', field_name_IN);
        SET @ddl = CONCAT(@ddl, ' ', field_definition_IN);

        PREPARE stmt FROM @ddl;
        EXECUTE stmt;
        DEALLOCATE PREPARE stmt;

    END IF;

END;

create or replace function isFieldExisting(table_name_IN varchar(100), field_name_IN varchar(100)) returns int
    RETURN (
        SELECT COUNT(COLUMN_NAME)
        FROM INFORMATION_SCHEMA.columns
        WHERE TABLE_SCHEMA = DATABASE()
          AND TABLE_NAME = table_name_IN
          AND COLUMN_NAME = field_name_IN
    );

CALL addFieldIfNotExists ('{prefix}_api_keys', 'own_only', 'boolean default false not null');


Удаление
Удаляем из корня сайта папку api, a так-же из папки engine/inc файл dleapi.php и из engine/skins/images файл dleapi.png.

Выполняем запрос в базу данных:
DELETE FROM {prefix}_admin_sections WHERE `name` = 'dleapi';
DROP TABLE {prefix}_api_keys cascade, {prefix}_api_scope cascade;
DROP PROCEDURE IF EXISTS addFieldIfNotExists;
DROP FUNCTION IF EXISTS isFieldExisting;

{prefix} заменяем на свой префикс базы данных.
